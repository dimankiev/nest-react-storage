version: '3.8'

services:
  frontend:
    container_name: app_frontend
    build:
      context: ./frontend
      dockerfile: Dockerfile
    environment:
      - NODE_ENV=production
      - GOOGLE_CLIENT_ID=${GOOGLE_CLIENT_ID}
    networks:
      - app_network
    depends_on:
      - backend

  backend:
    container_name: app_backend
    build:
      context: ./backend
      dockerfile: Dockerfile
    environment:
      - NODE_ENV=production
      - GOOGLE_CLIENT_ID=${GOOGLE_CLIENT_ID}
      - GOOGLE_CLIENT_SECRET=${GOOGLE_CLIENT_SECRET}
      - REDIS_HOST=app_redis
      - REDIS_PORT=6379
    networks:
      - app_network
    depends_on:
      redis:
        condition: service_healthy

  redis:
    container_name: app_redis
    image: redis:alpine
    networks:
      - app_network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  caddy:
    container_name: app_caddy
    image: caddy:2-alpine
    ports:
      - "8080:8080"
      - "8443:8443"
    volumes:
      - ./Caddyfile:/etc/caddy/Caddyfile
      - caddy_data:/data
      - caddy_config:/config
    networks:
      - app_network
    depends_on:
      - frontend
      - backend

networks:
  app_network:
    name: app_network
    driver: bridge

volumes:
  caddy_data:
    name: app_caddy_data
  caddy_config:
    name: app_caddy_config